<Window x:Class="Intron.LaserMonitor.CustomControls.MyMessageBox.MyMessageBoxWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Intron.LaserMonitor.CustomControls.MyMessageBox"
        mc:Ignorable="d"
        Title="MyMessageBox"
        SizeToContent="WidthAndHeight"
        MinWidth="420"
        Background="{DynamicResource DialogBackgroundBrush}"
        WindowStyle="None"
        AllowsTransparency="True"
        SnapsToDevicePixels="True"
        ShowInTaskbar="False">
    <Window.Resources>
        <!-- ===== LIGHT THEME (branco) ===== -->
        <SolidColorBrush x:Key="DialogBackgroundBrush"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="DialogCardBrush"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="DialogBorderBrush"
                         Color="#1A000000" />
        <SolidColorBrush x:Key="DialogForegroundBrush"
                         Color="#111111" />
        <SolidColorBrush x:Key="DialogSecondaryForegroundBrush"
                         Color="#666666" />
        <SolidColorBrush x:Key="DialogAccentBrush"
                         Color="#2563EB" />

        <!-- Botões -->
        <Style TargetType="Button"
               x:Key="DialogButton">
            <Setter Property="Foreground"
                    Value="{DynamicResource DialogForegroundBrush}" />
            <Setter Property="Padding"
                    Value="14,8" />
            <Setter Property="Margin"
                    Value="6,0,0,0" />
            <Setter Property="Background"
                    Value="#FFFFFFFF" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DialogBorderBrush}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12"
                                ClipToBounds="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#F5F7FB" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#EDF2FE" />
                            </Trigger>
                            <Trigger Property="IsDefault"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DialogAccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button"
               x:Key="PrimaryButton"
               BasedOn="{StaticResource DialogButton}">
            <Setter Property="Background"
                    Value="{DynamicResource DialogAccentBrush}" />
            <Setter Property="Foreground"
                    Value="#FFFFFFFF" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DialogAccentBrush}" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12"
                                ClipToBounds="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#1F4FC3" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#1746B0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cartão/Container -->
        <Style TargetType="Border"
               x:Key="Card">
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DialogBorderBrush}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Background"
                    Value="{DynamicResource DialogCardBrush}" />
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
        </Style>
    </Window.Resources>

    <Border Style="{StaticResource Card}"
            Padding="16"
            ClipToBounds="True">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Barra de título arrastável -->
            <Grid Grid.Row="0"
                  Margin="-6,-6,-6,12"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding TitleText, RelativeSource={RelativeSource AncestorType=Window}}"
                           Foreground="{DynamicResource DialogForegroundBrush}"
                           FontSize="16"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center" />
                <Button Grid.Column="1"
                        Click="Close_Click"
                        ToolTip="Fechar"
                        BorderThickness="0"
                        Background="Transparent"
                        Padding="8"
                        Margin="4">
                    <Path Data="M6,6 L18,18 M18,6 L6,18"
                          Stroke="#333333"
                          StrokeThickness="2"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round" />
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{x:Null}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                CornerRadius="12">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#F0F0F0" />
                                            </Trigger>
                                            <Trigger Property="IsPressed"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#E8E8E8" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick"
                                  Command="{x:Static SystemCommands.ShowSystemMenuCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
                </Grid.InputBindings>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="MouseLeftButtonDown">
                        <BeginStoryboard>
                            <Storyboard />
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>

            <!-- Cabeçalho: ícone + mensagem -->
            <DockPanel Grid.Row="1"
                       Margin="0,0,0,10">
                <Viewbox Width="32"
                         Height="32"
                         Margin="0,0,10,0">
                    <Image x:Name="ImageIcon" />
                    <!--<Path x:Name="IconPath"
                          Stretch="Uniform"
                          Fill="{DynamicResource DialogForegroundBrush}" />-->
                </Viewbox>
                <StackPanel>
                    <TextBlock Text="{Binding MessageText, RelativeSource={RelativeSource AncestorType=Window}}"
                               Foreground="{DynamicResource DialogForegroundBrush}"
                               FontSize="14"
                               FontWeight="SemiBold"
                               TextWrapping="Wrap" />
                    <TextBlock Text="{Binding DetailText, RelativeSource={RelativeSource AncestorType=Window}}"
                               Foreground="{DynamicResource DialogSecondaryForegroundBrush}"
                               FontSize="12"
                               Margin="0,6,0,0"
                               TextWrapping="Wrap" />
                </StackPanel>
            </DockPanel>

            <!-- Espaço extra para conteúdos longos -->
            <ScrollViewer Grid.Row="2"
                          VerticalScrollBarVisibility="Auto"
                          MaxHeight="280"
                          Visibility="Collapsed"
                          x:Name="ContentScroll" />

            <!-- Rodapé: checkbox + botões -->
            <DockPanel Grid.Row="3"
                       HorizontalAlignment="Right"
                       Height="25"
                       LastChildFill="False">
                <CheckBox x:Name="DontAskAgainCheck"
                          Content="{Binding DoNotAskAgainText, RelativeSource={RelativeSource AncestorType=Window}}"
                          Foreground="{DynamicResource DialogSecondaryForegroundBrush}"
                          VerticalAlignment="Center"
                          Margin="0,0,8,0"
                          Visibility="Collapsed" />
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <Button x:Name="CopyButton"
                            Width="50"
                            Margin="6, 0,0 ,0"
                            Click="CopyButton_Click"
                            Visibility="Collapsed">Copiar</Button>
                    <Button x:Name="TertiaryButton"
                            Width="50"
                            Margin="6, 0,0 ,0"
                            Click="TertiaryButton_Click"
                            Visibility="Collapsed" />
                    <Button x:Name="SecondaryButton"
                            Width="105"
                            Margin="6, 0,0 ,0"
                            Click="SecondaryButton_Click"
                            Visibility="Collapsed" />
                    <Button x:Name="PrimaryButton"
                            Width="95"
                            Margin="6, 0,0 ,0"
                            Click="PrimaryButton_Click"
                            Visibility="Collapsed">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background"
                                        Value="{DynamicResource DialogAccentBrush}" />
                                <Setter Property="Foreground"
                                        Value="#FFFFFFFF" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DialogAccentBrush}" />
                                <Setter Property="FontWeight"
                                        Value="SemiBold" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="6"
                                                    ClipToBounds="True">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="#1F4FC3" />
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="#1746B0" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        
                    </Button>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Border>
</Window>
